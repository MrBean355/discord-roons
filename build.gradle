buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.3.50"
        classpath "org.jetbrains.kotlin:kotlin-noarg:1.3.50"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.8.RELEASE"
    }
}

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "org.springframework.boot"

group 'com.github.mrbean355'
version '1.0.0-beta.4'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "org.springframework.boot:spring-boot-starter-data-rest:2.1.8.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.1.8.RELEASE"
    implementation "mysql:mysql-connector-java:8.0.12"

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.discord4j:discord4j-core:3.0.9'
    implementation 'com.discord4j:discord4j-voice:3.0.9'
    implementation 'com.sedmelluq:lavaplayer:1.3.22'
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

mainClassName = 'com.github.mrbean355.roons.MainKt'

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

task downloadSoundFiles(type: DownloadSoundFilesTask) {}

task copySound(type: Copy) {
    from 'src/main/resources/monitored'
    from 'src/main/resources/unmonitored'
    into "${buildDir.path}/libs/sounds"
}

jar.finalizedBy(copySound)